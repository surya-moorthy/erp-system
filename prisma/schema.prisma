generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects      Project[]     @relation("OwnerProjects")
  assignedTasks TaskAssignment[]
}

model Project {
  id        String   @id @default(uuid())
  name      String
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId   String
  owner     User     @relation("OwnerProjects", fields: [ownerId], references: [id])

  boards    Board[]
}

model Board {
  id        String   @id @default(uuid())
  name      String
  projectId String
  createdAt DateTime @default(now())

  project   Project  @relation(fields: [projectId], references: [id])
  columns   Column[]
}

model Column {
  id      String   @id @default(uuid())
  name    String
  order   Int      // Position in the board
  boardId String

  board   Board    @relation(fields: [boardId], references: [id])
  cards   Card[]
}

model Card {
  id          String   @id @default(uuid())
  title       String
  description String?
  dueDate     DateTime?
  order       Int      // Position in the column
  columnId    String

  column      Column   @relation(fields: [columnId], references: [id])
  assignments TaskAssignment[]
}

model TaskAssignment {
  id      String   @id @default(uuid())
  userId  String
  cardId  String

  user    User     @relation(fields: [userId], references: [id])
  card    Card     @relation(fields: [cardId], references: [id])

  @@unique([userId, cardId])
}
